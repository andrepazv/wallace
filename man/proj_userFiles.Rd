% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/proj_userFiles.R
\name{proj_userFiles}
\alias{proj_userFiles}
\title{proj_userFiles Project model to user specified area and time}
\usage{
proj_userFiles(
  evalOut,
  curModel,
  envs,
  outputType,
  alg,
  clamp,
  pjExt,
  logger = NULL,
  spN = NULL
)
}
\arguments{
\item{evalOut}{ENMevaluate output from previous module and using any of the available algorithms}

\item{curModel}{If algorithm is maxent, model selected by user as best or optimal, in terms of feature class and regularization multiplier (e.g 'L_1'). Else must be 1}

\item{envs}{User provided environmental layers (in raster format) to be used for projection.}

\item{outputType}{Output type to be used when algorithm is maxnet or maxent.jar.}

\item{alg}{Modeling algorithm used in the model component. Can be one of : 'bioclim', 'maxent.jar' or 'maxnet'}

\item{clamp}{logical, whether projection will be of clamped or unclamped model.}

\item{pjExt}{Extent of the area to project the model to. This must be provided by the user as a shapefileor as a SpatialPolygons object}

\item{logger}{logger stores all notification messages to be displayed in the Log Window of Wallace GUI. insert the logger reactive list here for running in shiny,
otherwise leave the default NULL}

\item{spN}{Character. Used to obtain species name for logger messages}
}
\description{
The function projects the model generated in previous components to user uploaded environmental variables and area
}
\details{
This functions allows for the projection of the model created in previous components to a new time and area provided by the user.
The projection time and area is user provided The model will be projected to the new time and area as long as the environmental variables provided are available for the area and match the variables used for model building.
This function returns a list including the cropped environmental variables used for projecting and the projected model.
}
\examples{
spN<-"Panthera onca"
out.gbif <- occs_queryDb(spName = spN, occDb = "gbif", occNum = 100)
envs <- envs_worldclim(bcRes = 10, bcSel = c('bio01','bio19'), doBrick = FALSE)
bgMask <- penvs_bgMask(occs, envs, bgExt,spN=spN)
bg <- penvs_bgSample(occs, bgMask, bgPtsNum = 10000,spN=spN)
partblock <- part_partitionOccs(occs, bg, method = 'block', kfolds = NULL, bgMask = NULL,aggFact = NULL,spN=spN)
Path <- list.files(path='./tests/testthat/shapefile', pattern = "COL_adm0.", full.names = TRUE)
userExt<-rgdal::readOGR(Path[2])
modAlg <- model_bioclim(occs, partblock$bg.grp,  partblock$occ.grp, bgGrp, bgMask,spN=spN)
envsFut<-list.files(path='./wc10/Future', pattern = ".tif$", full.names = TRUE)
envsFut<-raster::stack(envsFut)
modProj <- proj_userFiles(evalOut = modAlg, curModel=1, envs=envsFut,alg='bioclim',clamp=FALSE, pjExt = userExt)

}
\seealso{
\code{\link[dismo]{predict}}, \code{\link{proj_time}} \code{\link{proj_user}}
}
\author{
Jamie Kass <jkass@gradcenter.cuny.edu>

Andrea Paz <paz.andreita@gmail.com>

Gonzalo E. Pinilla-Buitrago < gpinillabuitrago@gradcenter.cuny.edu>
}
